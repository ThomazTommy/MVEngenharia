#server.port: 8443
#server.ssl.key-store: src\\main\\resources\\keystore.p12
#server.ssl.key-store-password: tomcat
#server.ssl.keyStoreType: PKCS12
#server.ssl.keyAlias: tomcat

#serverAD:10.61.236.250
#serverADName:cmdo.policiamilitar.sp.gov.br

#serverAD:201.6.100.179
#serverADName:tmsfasdom.com


# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/mvengenharia?autoReconnect=true&useSSL=false
spring.datasource.username = mvengenharia
spring.datasource.password = mvengenharia

#spring.datasource.url = jdbc:mysql://dedicatoriesdb.cwrmo14g4xfu.us-west-2.rds.amazonaws.com:3306/inspecao_seguros?autoReconnect=true&useSSL=false
#spring.datasource.username = inspecao_seguros
#spring.datasource.password = inspecao_seguros

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly.
spring.http.encoding.charset=UTF-8
# Enable http encoding support. 
spring.http.encoding.enabled=true
# Force the encoding to the configured charset on HTTP requests and responses. 
spring.http.encoding.force=true 

spring.thymeleaf.cache=false
spring.thymeleaf.encoding=UTF-8

#Key
token.secret = "my-very-secret-key"

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
 spring.jpa.hibernate.ddl-auto = update


spring.http.multipart.max-file-size=10MB
spring.http.multipart.max-request-size=10MB

# Naming strategy
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

spring.mail.host = smtp.gmail.com
spring.mail.username = yankersantos@gmail.com
spring.mail.password = fer14911
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
spring.mail.properties.mail.smtp.ssl.enable = true

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#server.error.whitelabel.enabled=false

logging.level.org.springframework.web=INFO
logging.level.br.com.br.com.tmsfasdom=DEBUG
logging.level.org.hibernate=ERROR
logging.file=logs/spring-boot-logging.log